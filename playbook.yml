---
- hosts: all
  any_errors_fatal: true
  become: yes
  tasks:
  - name: install docker and kube repo keys
    rpm_key:
      key: "{{ item }}"
      state: present
    with_items:
    - https://packages.cloud.google.com/yum/doc/yum-key.gpg
    - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: setup kube repo
    yum_repository:
      name: kubernetes
      description: Kubernetes
      baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      gpgcheck: true
      repo_gpgcheck: true
      enabled: true

  - name: install docker and kube packages
    yum:
      name: "{{ item }}"
      update_cache: true
      state: present
    with_items:
    - docker
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni

  - name: set selinux to permissive
    selinux:
      policy: targeted
      state: permissive

  - name: set kubelet cgroup driver to match docker
    lineinfile:
      dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      regexp: '^Environment="KUBELET_EXTRA_ARGS='
      line: 'Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=systemd"'

  - name: load br_netfilter module
    modprobe:
      name: br_netfilter
      state: present

  - name: enable bridge-nf-call-iptables
    sysctl:
      name: "{{ item }}"
      value: 1
      sysctl_file: /etc/sysctl.d/k8s.conf
    with_items:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables

  - name: disable selinux support in docker
    lineinfile:
      dest: /etc/sysconfig/docker
      regexp: "^OPTIONS="
      line: "OPTIONS='--log-driver=journald --signature-verification=false'"

  - name: use overlay for docker storage
    lineinfile:
      dest: /etc/sysconfig/docker-storage-setup
      regexp: "^STORAGE_DRIVER="
      line: "STORAGE_DRIVER=overlay"

  - name: enable and start docker and kubelet
    service:
      name: "{{ item }}"
      state: started
      enabled: true
    with_items:
    - docker
    - kubelet

  - name: check if we've been deployed already
    stat:
      path: /etc/kubernetes/kubelet.conf
    register: kubelet_conf

- hosts: primary
  any_errors_fatal: true
  become: yes
  vars:
    network_type: calico
  tasks:
  - name: generate a kubeadm token if needed
    shell: cat /root/kubeadm-token || (umask 0077 && kubeadm token generate | tee /root/kubeadm-token)
    register: kubeadm_token

  - name: run kubeadm init on master
    command: kubeadm init --token {{ kubeadm_token.stdout }} --apiserver-advertise-address {{ ansible_eth1.ipv4.address }} --pod-network-cidr 10.244.0.0/16
    when: not kubelet_conf.stat.exists

  - name: install flannel networking
    command: kubectl -n kube-system apply -f {{ item }}
    with_items:
    - https://rawgit.com/coreos/flannel/master/Documentation/kube-flannel-rbac.yml
    - https://rawgit.com/coreos/flannel/master/Documentation/kube-flannel.yml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    when: network_type == "flannel"

  - name: install calico networking
    command: kubectl -n kube-system apply -f http://docs.projectcalico.org/v2.1/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    when: network_type == "calico"

  - name: install kube dashboard
    command: kubectl apply -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: install nginx ingress
    command: kubectl apply -f https://rawgit.com/kubernetes/ingress/master/examples/deployment/nginx/kubeadm/nginx-ingress-controller.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: install heapster rc
    command: kubectl apply -f https://rawgit.com/kubernetes/heapster/master/deploy/kube-config/standalone/heapster-controller.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: install heapster service
    command: kubectl apply -f https://rawgit.com/kubernetes/heapster/master/deploy/kube-config/standalone/heapster-service.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: create web-hostname deployment
    shell: kubectl get deploy web-hostname || kubectl run web-hostname --image=quay.io/treytabner/web-hostname --replicas=2 --port=80
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

  - name: create web-hostname service
    shell: kubectl get service web-hostname || kubectl expose deployment web-hostname --port=80 --type=NodePort
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf

- hosts: workers
  any_errors_fatal: true
  become: yes
  tasks:
  - name: set primary name
    set_fact:
      primary: "{{ groups['primary'][0] }}"
    run_once: true

  - name: run kubeadm join on the rest
    command: kubeadm join --token {{ hostvars[primary].kubeadm_token.stdout }} {{ hostvars[primary].ansible_eth1.ipv4.address }}:6443
    when: not kubelet_conf.stat.exists

- hosts: primary
  any_errors_fatal: true
  become: yes
  tasks:
  - name: fetch admin kubeconfig
    fetch:
      src: /etc/kubernetes/admin.conf
      dest: admin.conf
      flat: yes
